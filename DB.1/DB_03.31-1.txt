+ DATE - 자료형

  - 날짜시간타입(datetime)
  - 날짜와 시간을 저장할 수 있는 타입
  - 초단위까지 표현 가능
  - 서식문자를 이용하여 년월일, 시분초, 오전/오후 등을 표현할 수 있음
  - BC 4712/01/01 ~ 4712/12/31 의 표현범위를 가짐
  
+ TIMESTAMP - 자료형
  
  - 날짜시간타입(datetime)
  - DATET 타입의 확장 타입
  - 밀리초까지 표현 가능
  - TIMEZONE(시간대) 설정이 들어갈 수 있음
  
** sysdate : DATE타입의 현재 날짜/시간

** systimestamp : TIMESTAMP타입의 현재 날짜/시간

+ RR, YY 의 서식 문자의 차이
  
  - to_char 에서는 아무런차이가 없다
  
  - to_data 에서는 현재날짜와 관련하여 인식되는 년도가 달라진다
  
  
  - YY : 현재 년도의 앞 두자리가 붙는다
        ex)   to_date('13/4/6', 'yy/mm/dd') ->2013년
              to_date('83/2/1', 'yy/mm/dd') ->2083년
              
  - RR : 현재 년도와 입력한 연도에 따라 달라진다
  
         현재년도   입력년도    결과
         00~49      00~49     현재 세기
         00~49      50~49     이전 세기
         
         50~99      00~49     다음 세기
         50~99      50~99     현재 세기
         
         ex)
         
         2015년     29/03/02   2029년
         2028년     69/09/13   1969년
         
         
         2077년     20/03/31   2120년
         2099년     94/09/07   2094년
      
+ LONG - 자료형      

  - 가변 길이 문자

  - 최대 길이가 2GB
 
  - 테이블 당 한 개의 컬럼만 지정할 수 있다
  
  - 테이블 내에 데이터가 저장된다
  
  
+ 로렘 입숨, Lorem Ipsum

  - http://www.lipsum.com/
  
  
+ 한글 로렘 입숨

  - http://hangul.thefron.me/
  
+ LOB, Large OBject

  - 가변 길이 타입

  - 최대 4GB 까지 저장 가능
  
  - 테이블에 여러 컬럼으로 지정할 수 있음
  
  - 참조형으로 동작한다
  
  - 테이블에는 데이터의 저장 위치만 기록한다
  
  - 실제 데이터는 따로 테이블 밖에 저장한다
  
  
  - BLOB : 바이너리, Binary, 이진 데이터
  
  - CLOB : 문자, Character, 문자 데이터
  
  - NCLOB : 문자, National Character
  
+ CLOB 데이터 조회하기

  - DBMS_LOB 객체를 이용한다
  
  - DBMS_LOB.SUBSTR( col, len, offset )
        col - 조회할 LOB 컬럼
        len - 조회할 데이터의 길이
        offset - 조회가 시작되는 오프셋
       
  - CLOB 데이터 전체 조회하기
      
        DBMS_LOB.SUBSTR( col, length(col), 1 )
        -> 첫번째 데이터부터 col 컬럼의 길이만큼 조회하기
        
        
+ RAW, LONG RAW
  - 바이너리 데이터를 저장한다
  
  - 이미지나 사운드 같은 바이너리 파일을 저장할 때 사용하는 데이터타입이다
  
  - 2진 데이터가 저장되고 조회 시 16진수로 출력된다
  
  - 문자로 변환할 수 없다
  
  - 사용하지마세요! BLOB 쓰세요!
  
+ 스키마, Schema

  - 데이터베이스의 구조
  
  - 데이터베이스에 대한 메타데이터
  
+ 데이터베이스를 바라보는 관점에 따라 분류한 스키마

  - 개념스키마 : 전체적인 구조
        DB의 전체적인 논리 구조
        개체들의 관계(Relation),  제약조건 등을 나타낸다
        DB에 대한 보안/권한/무결성 등을 정의한 것
        
  - 내부스키마 : 프로그래머가 바라보는 관점의 데이터베이스 구조
                DB의 물리적인 저장구조
                HDD(하드 디스크)에 어떻게 저장되어있는지에 대한 관점
                
  - 외부스키마 : 사용자관점에서 바라보는 데이터베이스 구조
                SELECT를 수행하여 바라보는 조회된 결과
                
                
  + 제약조건, 제약사항, Constraints
  
    - 테이블에 부적절한 데이터가 입력되는 것을 방지하는 목적으로
      테이블 컬럼에 설정하는 필터 조건
      
    - 데이터의 무결성을 유지한다
            
          ** 데이터 무결성, Integrity
             프로그램이 생명주기(Life Cycle)를 거치는 동안
             데이터가 정확하고 일관성 있는 값을 유지하고 
             그 값이 보장되는 성격
             
 + 제약사항 지정하는 방식
  
  1. CREATE TABLE 구문에 컬럼과 함께 지정하는 방식 
    ( 컬럼 레벨에서 지정하기 ) - 평가에 나옴
  
  2. 생성된 TABLE에 ALTER TABLE 구문을 이용하여 추가적으로 반영하는 방식
    ( 테이블 레벨에서 지정하기 ) - 평가에 나옴
                    
             
                
